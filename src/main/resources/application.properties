spring.config.import=classpath:env.properties

server.port=8081

spring.datasource.url=jdbc:postgresql://localhost:5432/receba_db
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.default_schema=${DATABASE_SCHEMA}
spring.jpa.hibernate.ddl-auto=none
logging.level.org.springframework.security=TRACE

receba.security.jksLocation=classpath:keystore/receba.jks
receba.security.password=${RSA_TOKEN_SIGNER_PASSWORD}
receba.security.keypair-alias=${RSA_TOKEN_SIGNER_NAME}
receba.security.provider-url=http://127.0.0.1:8081

spring.flyway.url=${DATABASE_URL}
spring.flyway.user=${DATABASE_USERNAME}
spring.flyway.password=${DATABASE_PASSWORD}
spring.flyway.schemas=${DATABASE_SCHEMA}
spring.flyway.locations=classpath:db/migration

spring.rabbitmq.host=${RABBIT_URL}
spring.rabbitmq.port=${RABBIT_PORT}
spring.rabbitmq.username=${RABBIT_USERNAME}
spring.rabbitmq.password=${RABBIT_PASSWORD}

#GitHub authentication client configuration:
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_SECRET}
spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.github.redirect-uri=http://receba:8081/login/oauth2/code/github
spring.security.oauth2.client.registration.github.client-authentication-method=basic
spring.security.oauth2.client.registration.github.scope=user
spring.security.oauth2.client.registration.github.client-name=Git Hub
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=email

#Google authentication client configuration:
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_SECRET}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.redirect-uri=http://192.168.1.9:4200/
spring.security.oauth2.client.registration.google.scope=https://www.googleapis.com/auth/cloud-platform.read-only
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://accounts.google.com/o/oauth2/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email